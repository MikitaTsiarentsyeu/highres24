import math
import re

def solve_quadratic(a, b, c):
    d = b**2 - 4*a*c
    if d >= 0:
        roots = sorted([(-b + math.sqrt(d)) / (2 * a), (-b - math.sqrt(d)) / (2 * a)])
        return " ".join(f"{r:.2f}" for r in roots) if d else f"{roots[0]:.2f}"
    return f"{-b / (2 * a):.2f} Â± {math.sqrt(-d) / (2 * a):.2f}i"

def parse_equation(eq):
    match = re.match(r'([+-]?\d*\.?\d*)\*?x\*x([+-]?\d*\.?\d*)\*?x([+-]?\d*\.?\d*)=0', eq.replace(" ", ""))
    return tuple(map(float, (match.groups() if match else ()))) if match else None

eq = input("Enter quadratic equation (e.g., 2*x*x-3*x+1=0): ")
coeffs = parse_equation(eq)
print("Invalid equation format." if not coeffs else "a cannot be zero." if coeffs[0] == 0 else solve_quadratic(*coeffs))
